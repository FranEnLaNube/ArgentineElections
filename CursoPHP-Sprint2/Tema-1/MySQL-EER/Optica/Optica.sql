-- MySQL Script generated by MySQL Workbench
-- Sun Jun 11 22:55:27 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Culo-E-Botella
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Culo-E-Botella
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Culo-E-Botella` ;
USE `Culo-E-Botella` ;

-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`direcciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`direcciones` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`direcciones` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `calle` VARCHAR(45) NOT NULL,
  `número` INT NULL,
  `Piso` TINYINT(2) NULL,
  `puerta` TINYINT(2) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`proveedores` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`proveedores` (
  `NIF` VARCHAR(9) NULL,
  `nombre` VARCHAR(95) NOT NULL,
  `idDirección` INT UNSIGNED NULL COMMENT 'Se vincula con un id de la tabla direcciones.',
  `teléfono` INT NOT NULL,
  `fax` INT NULL,
  PRIMARY KEY (`NIF`),
  INDEX `ngf_idx` (`idDirección` ASC) VISIBLE,
  CONSTRAINT `fkDirección`
    FOREIGN KEY (`idDirección`)
    REFERENCES `Culo-E-Botella`.`direcciones` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`personas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`personas` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`personas` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `idDirección` INT UNSIGNED NULL COMMENT 'Lo vinculo a la misma tabla direcciones que vinculé los proveedores',
  `Teléfono` INT NOT NULL,
  `e-mail` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fkDirección_idx` (`idDirección` ASC) VISIBLE,
  CONSTRAINT `fkDirección`
    FOREIGN KEY (`idDirección`)
    REFERENCES `Culo-E-Botella`.`direcciones` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Almaceno toda la información genérica de una persona';


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`marcas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`marcas` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`marcas` (
  `idMarca` INT NULL AUTO_INCREMENT COMMENT 'Podría presindirse pero lo dejo para hacer más fácil la búsqueda',
  `marca` VARCHAR(45) NOT NULL,
  `idProveedor` VARCHAR(9) NOT NULL COMMENT ' Es varchar para coincidir con el NIF, que es el pk de proveedor',
  PRIMARY KEY (`idMarca`),
  INDEX `fkProveedor_idx` (`idProveedor` ASC) VISIBLE,
  CONSTRAINT `fkProveedor`
    FOREIGN KEY (`idProveedor`)
    REFERENCES `Culo-E-Botella`.`proveedores` (`NIF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabla para generar las relaciones exigidas por el ejercicio.';


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`vidrios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`vidrios` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`vidrios` (
  `idLente` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `color` VARCHAR(45) NULL,
  `graduación` FLOAT NULL,
  PRIMARY KEY (`idLente`))
ENGINE = InnoDB
COMMENT = 'Cada fila es una combinación de color y graduación para un lente.';


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`combinaciónVidrios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`combinaciónVidrios` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`combinaciónVidrios` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `idVidrioIzq` INT UNSIGNED NOT NULL COMMENT 'Es el ID que sale de la tabla vidrios para el lado izquierdo',
  `idVidrioDer` INT UNSIGNED NOT NULL COMMENT 'Es el ID que sale de la tabla vidrios para el lado derecho',
  PRIMARY KEY (`id`),
  INDEX `fk_lenteIzq_idx` (`idVidrioIzq` ASC, `idVidrioDer` ASC) VISIBLE,
  CONSTRAINT `fkLente`
    FOREIGN KEY (`idVidrioIzq` , `idVidrioDer`)
    REFERENCES `Culo-E-Botella`.`vidrios` (`idLente` , `idLente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'En cada fila tiene una combinación de las características del lente izq y el derecho, vinculados con su id proveniente de la tabla Lentes';


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`gafas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`gafas` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`gafas` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `idMarca` INT UNSIGNED NOT NULL,
  `tipoMontura` ENUM('pasta', 'flotante', 'metal') NULL COMMENT 'Por ahora en el ejercicio tenemos tres tipos de montura. Si en un futuro se tienen más puede no ser lo mejor usar ENUM.',
  `colorMontura` VARCHAR(45) NULL,
  `precio` FLOAT NOT NULL,
  `idCombinación` INT UNSIGNED NOT NULL COMMENT 'Vincula con la tabla combinaciónLentes que en cada fila tiena la info de cada lente vinculado con su ID que viene de la tabla Lentes',
  PRIMARY KEY (`id`, `precio`),
  UNIQUE INDEX `marca_UNIQUE` (`idMarca` ASC) VISIBLE,
  INDEX `fkCombinación_idx` (`idCombinación` ASC) VISIBLE,
  CONSTRAINT `fkMarcas`
    FOREIGN KEY (`idMarca`)
    REFERENCES `Culo-E-Botella`.`marcas` (`idMarca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkCombinación`
    FOREIGN KEY (`idCombinación`)
    REFERENCES `Culo-E-Botella`.`combinaciónVidrios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`clientes` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`clientes` (
  `id` INT UNSIGNED NOT NULL,
  `idReferido` INT UNSIGNED NULL,
  `fechaRegistro` DATE NOT NULL,
  UNIQUE INDEX `idPersona_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fkReferido_idx` (`idReferido` ASC) VISIBLE,
  CONSTRAINT `fkPersona`
    FOREIGN KEY (`id`)
    REFERENCES `Culo-E-Botella`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkReferido`
    FOREIGN KEY (`idReferido`)
    REFERENCES `Culo-E-Botella`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Datos específicos de los clientes como el referido y la fecha de registro.';


-- -----------------------------------------------------
-- Table `Culo-E-Botella`.`ventas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Culo-E-Botella`.`ventas` ;

CREATE TABLE IF NOT EXISTS `Culo-E-Botella`.`ventas` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idGafa` INT UNSIGNED NOT NULL,
  `idVendedor` INT UNSIGNED NOT NULL,
  `idCliente` INT UNSIGNED NOT NULL,
  `fecha` DATETIME NULL COMMENT 'Le pongo fecha y  hora porque los tickets siempre lo tienen.',
  PRIMARY KEY (`id`),
  INDEX `fkGafa_idx` (`idGafa` ASC) VISIBLE,
  INDEX `fkVendedor_idx` (`idVendedor` ASC) VISIBLE,
  INDEX `fkCliente_idx` (`idCliente` ASC) VISIBLE,
  CONSTRAINT `fkGafa`
    FOREIGN KEY (`idGafa`)
    REFERENCES `Culo-E-Botella`.`gafas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkVendedor`
    FOREIGN KEY (`idVendedor`)
    REFERENCES `Culo-E-Botella`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `Culo-E-Botella`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Relaciona en cada transacción qué gafa con qué vendedor qué cliente y en qué momento';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
